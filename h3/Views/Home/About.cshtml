@model h3.Models.MaintainedViewModel

@{
    ViewBag.Title = "About";
}
<main>
    <section class="row" aria-labelledby="aspnetTitle">
        <h1 id="title">ASP.NET</h1>
        <p class="lead">ASP.NET is a free web framework for building great Web sites and Web applications using HTML, CSS and JavaScript.</p>
        <p><a href="https://asp.net" class="btn btn-primary btn-md">Learn more &raquo;</a></p>
    </section>
</main>

<div class="row">
    <div class="col-md-5">
        <h2>Authors</h2>

        <p>
            <a href="#" class="create-link" data-url="@Url.Action("Create", "authors")">Create New Author</a>
        </p>

        <table class="table" style="width:100%">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.authors.FirstOrDefault().name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.authors.FirstOrDefault().surname)
                </th>
                <th></th>
            </tr>
            @foreach (var item in Model.authors)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.surname)
                    </td>
                    <td class="text-end">
                        <a href="#" class="edit-link" data-url="@Url.Action("Edit", "authors", new { id = item.authorId })">Edit</a>
                        <a href="#" class="details-link" data-url="@Url.Action("Details", "authors", new { id = item.authorId })">Details</a>
                        <a href="#" class="delete-link" data-url="@Url.Action("Delete", "authors", new { id = item.authorId })">Delete</a>
                    </td>
                </tr>
            }
        </table>
    </div>
    <div class="col-md-2">
    </div>
    <div class="col-md-5">
        <h2>Types</h2>

        <p>
            <a href="#" class="create-lookup-link" data-url="@Url.Action("Create", "types")">Create Type</a>
        </p>

        <table class="table" style="width:100%">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.types.FirstOrDefault().name)
                </th>
                <th></th>
            </tr>
            @foreach (var item in Model.types)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.name)
                    </td>
                    <td class="text-end">
                        <a href="#" class="edit-link" data-url="@Url.Action("Edit", "types", new { id = item.typeId })">Edit</a>
                        <a href="#" class="details-link" data-url="@Url.Action("Details", "types", new { id = item.typeId })">Details</a>
                        <a href="#" class="delete-link" data-url="@Url.Action("Delete", "types", new { id = item.typeId })">Delete</a>
                    </td>
                </tr>
            }
        </table>
    </div>
    <div class="col-md-5">
        <h2>Borrows</h2>

        <p>
            <a href="#" class="create-lookup-link" data-url="@Url.Action("Create", "borrows")">Create Borrow</a>
        </p>

        <table class="table" style="width:100%">
            <tr>
                <th>
                    Student Name
                </th>
                <th>
                    Book Name
                </th>
                <th>
                    Taken Date
                </th>
                <th>
                    Brought Date
                </th>
                <th></th>
            </tr>
            @foreach (var item in Model.borrows)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.students.name) @Html.DisplayFor(modelItem => item.students.surname)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.books.name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.takenDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.broughtDate)
                    </td>
                    <td class="text-end">
                        <a href="#" class="edit-link" data-url="@Url.Action("Edit", "borrows", new { id = item.borrowId })">Edit</a>
                        <a href="#" class="details-link" data-url="@Url.Action("Details", "borrows", new { id = item.borrowId })">Details</a>
                        <a href="#" class="delete-link" data-url="@Url.Action("Delete", "borrows", new { id = item.borrowId })">Delete</a>
                    </td>
                </tr>
            }
        </table>
    </div>
</div>

<div id="myModal" class="modal fade" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Sample Async CRUD</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="modal-content">
            </div>
        </div>
    </div>
</div>



<script>
        $(function () {
            // Function to handle Edit link click event in the Combined View and Details modal
            $(".edit-link, .edit-link-in-modal").click(function (e) {
                e.preventDefault();
                var url = $(this).data("url");

                $.get(url, function (data) {
                    $("#modal-content").empty();
                    $("#modal-content").html(data);
                    $("#myModal").modal("show");
                });
            });

            // Function to handle form submission within the modal
            $("#modal-content").on("submit", "form", function (e) {
                e.preventDefault();
                var form = $(this);
                var url = form.attr("action");
                var formData = form.serialize();

                $.post(url, formData, function (data) {
                    $("#myModal").modal("hide");
                    location.reload();
                });
            });

            // Function to handle other links (details, delete, create) within the modal
            $(".details-link, .delete-link, .create-link, .create-lookup-link").click(function (e) {
                e.preventDefault();
                var url = $(this).data("url");

                $.get(url, function (data) {
                    $("#modal-content").empty();
                    $("#modal-content").html(data);
                    $("#myModal").modal("show");
                });
            });
        });
</script>